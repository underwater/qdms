<controls:MetroWindow 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:qdmsServer="clr-namespace:QDMSServer"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:qdms="clr-namespace:QDMS;assembly=QDMS"
    xmlns:helpers="clr-namespace:QDMSServer.Helpers"
    x:Class="QDMSServer.AddInstrumentManuallyWindow"
    Title="Add Instrument: Manual" Height="713.55" Width="396.4"
    ResizeMode="NoResize"
    BorderBrush="Black"
    BorderThickness="1"
    Closing="MetroWindow_Closing"
    >
    <controls:MetroWindow.Resources>
        <qdmsServer:StringToNullableConverter x:Key="StringToNullableConverter" />
        <qdmsServer:InvertBooleanConverter x:Key="InvertBooleanConverter" />
        <qdmsServer:IsNullConverter x:Key="IsNullConverter" />
        <qdmsServer:DatasourceMultiValueConverter x:Key="DatasourceMultiValueConverter" />
        <qdmsServer:ExchangeMultiValueConverter x:Key="ExchangeMultiValueConverter" />
        <qdmsServer:TimeSpanConverter x:Key="TimeSpanConverter" />
        <qdmsServer:StringToIntConverter x:Key="StringToIntConverter" />
        <qdmsServer:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
        <qdmsServer:EnumerationMemberToEnumConverter x:Key="EnumerationMemberToEnumConverter"/>

        <ObjectDataProvider x:Key="DOTWEnum" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="qdms:DayOfTheWeek"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="RolloverTypes" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="qdms:ContinuousFuturesRolloverType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="AdjMethodEnum" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="qdms:ContinuousFuturesAdjustmentMode"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </controls:MetroWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100*"/>
            <RowDefinition Height="35"/>
        </Grid.RowDefinitions>

        <TabControl SelectedIndex="0">
            <TabItem Header="Settings">
                <ScrollViewer>
                    <StackPanel>
                        <StackPanel>
                            <TextBlock Visibility="Collapsed" FontSize="16" Name="ErrorMessage" Margin="10" Foreground="Red" Text="{Binding ErrorMessage}"/>
                        </StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="73*"/>
                                <ColumnDefinition Width="106*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="549*"/>

                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Margin="5 2" Grid.Column="0" Text="Symbol:" VerticalAlignment="Center" />
                            <TextBox Grid.Row="0" Grid.Column="1" Margin="5 2"
                             TextWrapping="NoWrap" 
                             Text="{Binding Instrument.Symbol}" />

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Underlying Symbol:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Margin="5 2" Text="{Binding Instrument.UnderlyingSymbol}"/>

                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Data Source Symbol:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="2" Grid.Column="1"  Text="{Binding Instrument.DatasourceSymbol}" Margin="5 2"/>


                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Name:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="3" Grid.Column="1" TextWrapping="NoWrap" Text="{Binding Instrument.Name}" Margin="5 2" />

                            <TextBlock Grid.Row="4" Grid.Column="0" Text="Exchange:" VerticalAlignment="Center" Margin="5 2"/>
                            <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="1">
                                <ComboBox MinWidth="150" Margin="5 2"
                                  SelectionChanged="ExchangeComboBox_OnSelectedIndexChanged" 
                                  IsEnabled="{Binding IsChecked, Converter={StaticResource InvertBooleanConverter}, ElementName=ExchangeNullCheckBox}"   
                                  x:Name="ExchangeComboBox" IsTextSearchEnabled="True" 
                                  ItemsSource="{Binding Exchanges}" DisplayMemberPath="Name" >
                                    <ComboBox.SelectedItem>
                                        <MultiBinding Converter="{StaticResource ExchangeMultiValueConverter}">
                                            <Binding Path="Instrument.Exchange" Mode="TwoWay" />
                                            <Binding Path="Instrument.ExchangeID" Mode="OneWayToSource" />
                                        </MultiBinding>
                                    </ComboBox.SelectedItem>
                                </ComboBox>
                                <!--IsEnabled="{Binding ElementName=ExchangeRadioBtn,Path=IsChecked,Converter={StaticResource InvertBooleanConverter}}" -->
                                <CheckBox x:Name="ExchangeNullCheckBox" 
                              IsChecked="{Binding Instrument.ExchangeID, Converter={StaticResource IsNullConverter}, Mode=OneWay}" 
                              Content="Null" />

                            </StackPanel>

                            <TextBlock Grid.Row="5" Grid.Column="0" Text="Primary Exchange:" VerticalAlignment="Center" Margin="5 2"/>

                            <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal">
                                <ComboBox MinWidth="150" Margin="5 2" IsEnabled="{Binding IsChecked, Converter={StaticResource InvertBooleanConverter}, ElementName=PrimaryExchangeNullCheckBox}" 
                                  x:Name="PrimaryExchangeComboBox" 
                                  IsTextSearchEnabled="True" 
                                  ItemsSource="{Binding Exchanges}" DisplayMemberPath="Name">
                                    <ComboBox.SelectedItem>
                                        <MultiBinding Converter="{StaticResource ExchangeMultiValueConverter}">
                                            <Binding Path="Instrument.PrimaryExchange" Mode="TwoWay" />
                                            <Binding Path="Instrument.PrimaryExchangeID" Mode="OneWayToSource" />
                                        </MultiBinding>
                                    </ComboBox.SelectedItem>
                                </ComboBox>
                                <CheckBox x:Name="PrimaryExchangeNullCheckBox" 
                                  IsChecked="{Binding Instrument.PrimaryExchangeID, Converter={StaticResource IsNullConverter}, Mode=OneWay}" 
                                  Content="Null" />
                            </StackPanel>


                            <TextBlock Grid.Row="6" Grid.Column="0" Text="Type:" VerticalAlignment="Center" Margin="5 2"/>
                            <ComboBox Grid.Row="6" Grid.Column="1"  x:Name="TypeComboBox" 
                              ItemsSource="{Binding Source={helpers:Enumeration {x:Type qdms:InstrumentType}}}"
                              SelectedItem="{Binding Instrument.Type, Converter={StaticResource EnumerationMemberToEnumConverter}}"
                              DisplayMemberPath="Value" 
                              IsTextSearchEnabled="True" Margin="5 2"/>


                            <TextBlock Grid.Row="7" Grid.Column="0" Text="Option Type:" VerticalAlignment="Center" Margin="5 2"/>
                            <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1" >
                                <ComboBox MinWidth="150"
                                  ItemsSource="{Binding Source={helpers:Enumeration {x:Type qdms:OptionType}}}"
                                  DisplayMemberPath="Description"
                                  SelectedValuePath="Value" 
                                  IsEnabled="{Binding IsChecked, Converter={StaticResource InvertBooleanConverter}, ElementName=OptionTypeNullCheckBox}" 
                                  x:Name="OptionTypeComboBox" 
                                  IsTextSearchEnabled="True" 
                                  SelectedItem="{Binding Instrument.OptionType, Converter={StaticResource EnumerationMemberToEnumConverter}}" Margin="5 2"/>
                                <CheckBox Click="OptionTypeNullCheckBox_Click"
                                  x:Name="OptionTypeNullCheckBox" 
                                  IsChecked="{Binding Instrument.OptionType, Converter={StaticResource IsNullConverter}, Mode=OneWay}" 
                                  Content="Null" />

                            </StackPanel>

                            <TextBlock Grid.Row="8" Grid.Column="0" Text="Multiplier:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="8" Margin="5 2" 
                             Grid.Column="1" 
                             x:Name="MultiplierTextBox" 
                             TextWrapping="Wrap" Text="{Binding Instrument.Multiplier, Converter={StaticResource StringToNullableConverter}}" />

                            <TextBlock Grid.Row="9" Grid.Column="0" Text="Expiration:" Margin="5 2"/>
                            <DatePicker Grid.Row="9" Grid.Column="1" Margin="5 2" SelectedDate="{Binding Instrument.Expiration, Converter={StaticResource StringToNullableConverter},StringFormat=\'dd/MM/yyyy\'}" />

                            <TextBlock Grid.Row="10" Grid.Column="0" Text="Strike:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="10" Grid.Column="1"  
                             TextWrapping="Wrap" 
                             Text="{Binding Instrument.Strike, Converter={StaticResource StringToNullableConverter}}" Margin="5 2"/>

                            <TextBlock Grid.Row="11" Grid.Column="0" Text="Currency:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="11" Grid.Column="1" 
                             TextWrapping="Wrap" Text="{Binding Instrument.Currency}" Margin="5 2"/>

                            <TextBlock Grid.Row="12" Grid.Column="0" Text="Min Tick:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="12" Grid.Column="1" 
                             TextWrapping="Wrap" 
                             Text="{Binding Instrument.MinTick, Converter={StaticResource StringToNullableConverter}}" Margin="5 2"/>

                            <TextBlock Grid.Row="13" Grid.Column="0" Text="Industry:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="13" Grid.Column="1" 
                             TextWrapping="NoWrap" Text="{Binding Instrument.Industry}" Margin="5 2"/>

                            <TextBlock Grid.Row="14" Grid.Column="0" Text="Category:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="14" Grid.Column="1" 
                             TextWrapping="NoWrap" Text="{Binding Instrument.Category}" Margin="5 2"/>

                            <TextBlock Grid.Row="15" Grid.Column="0" Text="Subcategory:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="15" Grid.Column="1" 
                             TextWrapping="NoWrap" Text="{Binding Instrument.Subcategory}" Margin="5 2"/>

                            <TextBlock Grid.Row="16" Grid.Column="0" Text="Tags:" Margin="5 2"/>
                            <ScrollViewer  Grid.Row="16" Grid.Column="1" VerticalScrollBarVisibility="Auto" Margin="5 2">
                                <ItemsControl  x:Name="TagsListBox" FontSize="10" ItemsSource="{Binding Tags}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox Content="{Binding Path=Item.Name}" IsChecked="{Binding Path=IsChecked}" Margin="5 5 0 0"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                            <TextBlock Grid.Row="17" Grid.Column="0" Text="Datasource:" VerticalAlignment="Center" Margin="5 2"/>
                            <ComboBox Grid.Row="17" Grid.Column="1" 
                              DisplayMemberPath="Name"
                              x:Name="DatasourceComboBox" 
                              IsTextSearchEnabled="True" Margin="5 2"
                              ItemsSource="{Binding Datasources}">
                                <ComboBox.SelectedItem>
                                    <MultiBinding Converter="{StaticResource DatasourceMultiValueConverter}">
                                        <Binding Path="Instrument.Datasource" Mode="TwoWay" />
                                        <Binding Path="Instrument.DatasourceID" Mode="OneWayToSource" />
                                    </MultiBinding>
                                </ComboBox.SelectedItem>
                            </ComboBox>

                            <TextBlock Grid.Row="18" Grid.Column="0" Text="Valid Exchanges:" VerticalAlignment="Center" Margin="5 2"/>
                            <TextBox Grid.Row="18" Grid.Column="1"  TextWrapping="NoWrap" Text="{Binding Instrument.ValidExchanges}" Margin="5 2"/>

                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>


            <TabItem Header="Sessions">
                <Grid Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <GroupBox Header="Session Source" HorizontalAlignment="Stretch" Margin="10,10,10,0" VerticalAlignment="Top" >
                        <StackPanel>
                            <RadioButton Content="Exchange" Margin="5"
                                         IsChecked="{Binding Instrument.SessionsSource, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Exchange}"
                                         IsEnabled="{Binding ElementName=ExchangeNullCheckBox,Path=IsChecked,Converter={StaticResource InvertBooleanConverter}}">
                            </RadioButton>
                            <RadioButton  Margin="5" Content="Custom" IsChecked="{Binding Instrument.SessionsSource, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Custom}"/>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <RadioButton Content="Template:" Margin="5" Name="TemplateRadioBtn" IsChecked="{Binding Instrument.SessionsSource, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Template}" />
                                <ComboBox Margin="5"
                                          ItemsSource="{Binding Templates}"
                                          SelectedItem="{Binding SelectedTemplate}"
                                          DisplayMemberPath="Name" 
                                          Grid.Column="1"
                                          x:Name="TemplateComboBox" 
                                          IsEnabled="{Binding IsChecked, ElementName=TemplateRadioBtn}" />
                            </Grid>
                        </StackPanel>
                    </GroupBox>

                    <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10 0">
                        <Button Width="40" Height="40" IsEnabled="{Binding ElementName=CustomRadioBtn,Path=IsChecked}" Style="{StaticResource MetroCircleButtonStyle}"  
                                Click="AddSessionItemBtn_Click" 
                                Name="AddSessionItemBtn" 
                                Content="+" 
                                FontSize="17"/>

                        <Button IsEnabled="{Binding ElementName=CustomRadioBtn,Path=IsChecked}" Style="{StaticResource MetroCircleButtonStyle}"
                                Click="DeleteSessionItemBtn_Click" 
                                Width="40" Height="40"
                                FontSize="17"
                                Foreground="Red"
                                Name="DeleteSessionItemBtn" 
                                Content="x" />

                    </StackPanel>

                    <DataGrid  Name="SessionsGrid" IsEnabled="{Binding ElementName=CustomRadioBtn,Path=IsChecked}" Margin="10" 
                               ItemsSource="{Binding SelectedSessions}" AutoGenerateColumns="False"  HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch" Grid.Row="2" CanUserAddRows="False">

                        <DataGrid.Columns>
                            <DataGridComboBoxColumn SelectedItemBinding="{Binding Path=OpeningDay}" SortDirection="Ascending" Header="Open" Width="65" ItemsSource="{Binding Source={StaticResource DOTWEnum}}" />

                            <DataGridTemplateColumn  Header="Time" Width="65">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <xctk:MaskedTextBox Mask="00:00:00" ValueDataType="system:String" >
                                            <xctk:MaskedTextBox.Text>
                                                <Binding Path="OpeningTime" Converter="{StaticResource TimeSpanConverter}" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                                    <Binding.ValidationRules>
                                                        <qdmsServer:TimeValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </xctk:MaskedTextBox.Text>
                                        </xctk:MaskedTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridComboBoxColumn SelectedItemBinding="{Binding Path=ClosingDay}" Header="Close" Width="65" ItemsSource="{Binding Source={StaticResource DOTWEnum}}" />

                            <DataGridTemplateColumn  Header="Time" Width="65">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <xctk:MaskedTextBox Mask="00:00:00" ValueDataType="system:String" >
                                            <xctk:MaskedTextBox.Text>
                                                <Binding Path="ClosingTime" Converter="{StaticResource TimeSpanConverter}" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                                    <Binding.ValidationRules>
                                                        <qdmsServer:TimeValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </xctk:MaskedTextBox.Text>
                                        </xctk:MaskedTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTemplateColumn Width="45" Header="End">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Style="{StaticResource DataGridCheckBoxStyle}" IsChecked="{Binding Path=IsSessionEnd}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                </Grid>
            </TabItem>

            <TabItem Name="ContFutTabItem" Header="Cont. Fut." HorizontalAlignment="Left" VerticalAlignment="Top">
                <Grid Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="45"/>
                        <RowDefinition Height="100"/>
                        <RowDefinition Height="125"/>
                        <RowDefinition Height="87*"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0"  Content="Root Symbol:" HorizontalAlignment="Left" Margin="5,10,0,0"  Width="109"/>
                    <ComboBox Grid.Row="0"  Name="RootSymbolComboBox" 
                              ItemsSource="{Binding UnderlyingSymbols}"
                              HorizontalAlignment="Left" Margin="120,10,0,0" 
                              SelectedItem="{Binding Instrument.ContinuousFuture.UnderlyingSymbol}"
                              DisplayMemberPath="Symbol" VerticalAlignment="Top" Width="120" Height="26"/>


                    <GroupBox Grid.Row="1" Header="Months" Margin="5,0,5,0" VerticalAlignment="Top" Height="85" HorizontalAlignment="Stretch">
                        <Grid>
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseJan}" x:Name="MonthsJan" Content="Jan (F)" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" />
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseFeb}" x:Name="MonthsFeb" Content="Feb (G)" HorizontalAlignment="Left" Margin="60,0,0,0" VerticalAlignment="Top" />
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseMar}" x:Name="MonthsMar" Content="Mar (H)" HorizontalAlignment="Left" Margin="125,0,0,0" VerticalAlignment="Top"/>
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseApr}" x:Name="MonthsApr" Content="Apr (J)" HorizontalAlignment="Left" Margin="190,0,0,0" VerticalAlignment="Top"/>
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseMay}" x:Name="MonthsMay" Content="May (K)" HorizontalAlignment="Left" Margin="251,0,0,0" VerticalAlignment="Top"/>
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseJun}" x:Name="MonthsJun" Content="Jun (M)" HorizontalAlignment="Left" Margin="316,0,0,0" VerticalAlignment="Top"/>
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseJul}" x:Name="MonthsJul" Content="Jul (N)" HorizontalAlignment="Left" Margin="0,22,0,0" VerticalAlignment="Top"/>
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseAug}" x:Name="MonthsAug" Content="Aug (Q)" HorizontalAlignment="Left" Margin="60,22,0,0" VerticalAlignment="Top"/>
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseSep}" x:Name="MonthsSep" Content="Sep (U)" HorizontalAlignment="Left" Margin="125,22,0,0" VerticalAlignment="Top" />
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseOct}" x:Name="MonthsOct" Content="Oct (V)" HorizontalAlignment="Left" Margin="190,22,0,0" VerticalAlignment="Top" />
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseNov}" x:Name="MonthsNov" Content="Nov (X)" HorizontalAlignment="Left" Margin="251,22,0,0" VerticalAlignment="Top" />
                            <CheckBox IsChecked="{Binding Instrument.ContinuousFuture.UseDec}" x:Name="MonthsDec" Content="Dec (Z)" HorizontalAlignment="Left" Margin="316,22,0,0" VerticalAlignment="Top" />
                        </Grid>
                    </GroupBox>


                    <GroupBox Header="Rollover" Margin="5,10,5,0" Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Stretch" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <RadioButton Name="RolloverRule" Margin="5,10"
                                             Content="Rule-Based" HorizontalAlignment="Left" />
                                <RadioButton x:Name="RolloverTime" Margin="5"
                                             IsChecked="{Binding Instrument.ContinuousFuture.RolloverType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Time}"
                                             Content="Time-Based" HorizontalAlignment="Left" />
                            </StackPanel>
                            <StackPanel Grid.Column="1">

                                <Grid Margin="5" IsEnabled="{Binding IsChecked, ElementName=RolloverRule}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Days of higher" />
                                    <ComboBox Name="RolloverRuleType" ItemsSource="{Binding Source={helpers:Enumeration {x:Type qdms:ContinuousFuturesRolloverType}}}"
                                              DisplayMemberPath="Description"
                                              SelectedValuePath="Value" 
                                              SelectedIndex="0" 
                                              Grid.Column="1"
                                              SelectedItem="{Binding Instrument.ContinuousFuture.RolloverType, Converter={StaticResource EnumerationMemberToEnumConverter}}" >
                                    </ComboBox>
                                </Grid>

                                <Grid Margin="5" IsEnabled="{Binding IsChecked, ElementName=RolloverTime}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Trading days prior to expiration" />
                                    <TextBox x:Name="RolloverTimeDays" 
                                             Grid.Column="1"
                                             Text="{Binding Instrument.ContinuousFuture.RolloverDays,Converter={StaticResource StringToIntConverter}}" TextWrapping="Wrap" />

                                </Grid>
                               
                            </StackPanel>



                        </Grid>
                    </GroupBox>
                    <Label Grid.Row="3"  Content="Contract Month:" HorizontalAlignment="Left" Margin="5,14,0,0" VerticalAlignment="Top" Height="23" Width="135"/>
                    <ComboBox Grid.Row="3"  x:Name="ContractMonthComboBox" HorizontalAlignment="Left" SelectedIndex="0"
                              IsEditable="False" ItemsSource="{Binding ContractMonths}" DisplayMemberPath="Value" SelectedValuePath="Key"
                              SelectedValue="{Binding Instrument.ContinuousFuture.Month}"
                                Margin="145,10,0,0" VerticalAlignment="Top" Width="176" Height="26">
                    </ComboBox>
                    <Label Grid.Row="3"  Content="Adjustment Method:" HorizontalAlignment="Left" Margin="5,42,0,0" VerticalAlignment="Top"  Width="135"/>
                    <ComboBox Grid.Row="3"  x:Name="AdjustmentMethodComboBox" HorizontalAlignment="Left" SelectedIndex="0"
                        SelectedItem="{Binding Instrument.ContinuousFuture.AdjustmentMode}" ItemsSource="{Binding Source={StaticResource AdjMethodEnum}}" 
                              Margin="145,40,0,0" VerticalAlignment="Top" Width="176" Height="26">
                    </ComboBox>



                </Grid>
            </TabItem>
        </TabControl>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button x:Name="AddBtn" Command="{Binding AddCommand}" Content="Add" Margin="10 5" MinWidth="80"/>
            <Button x:Name="CancelBtn" Click="CancelBtn_Click" Content="Cancel" Margin="5" MinWidth="80"/>
        </StackPanel>

    </Grid>
</controls:MetroWindow>
